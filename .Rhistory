browseVignettes(summarise())
?dplyr_by
library(dplyr, warn.conflicts = FALSE)
library(nycflights13)
data(flights)
data(airports)
data(airlines)
filter(flights, month == 1)
flights |>
filter(month == 1)
flights |>
filter(dep_delay >= 10 & dep_delay <= 15)
flights |>
filter(distance == max(distance))
m <- 2
flights |>
filter(month == m)
airports |>
slice(345)
airports |>
slice(3:5)
flights |>
arrange(dep_delay)
flights |>
arrange(month, dep_delay)
flights |>
arrange(month, desc(dep_delay))
flights |>
arrange(desc(dep_delay)) |>
slice(1:3)
flights |>
slice_sample(n = 3)
flights |>
slice_sample(prop = 0.023)
sample(letters, 3)
set.seed(123)
sample(letters, 3)
set.seed(123)
sample(letters, 3)
set.seed(123)
sample(letters, 3)
flights |>
select(day, month) |>
distinct()
flights |>
distinct(month, day)
flights |>
distinct(month, day, .keep_all = TRUE)
airports |>
select(lat, lon)
airports |>
select(-lat, -lon)
flights |>
select(starts_with("dep_"))
flights |>
select(year:day)
flights |>
select(all_of(c("year", "month", "day")))
flights |>
select(where(is.character))
airports |>
select(name, everything())
airports |>
relocate(lon, lat, name)
airports |>
rename(longitude = lon, latitude = lat)
airports |>
pull(alt) |>
mean()
airports <-
airports |>
mutate(alt_m = alt / 3.2808)
airports
flights <-
flights |>
mutate(
distance_km = distance / 0.62137,
vitesse_kmh = distance_km / air_time * 60
)
flights
flights |>
group_by(month)
flights |>
group_by(month) |>
slice(1)
flights |>
group_by(month) |>
mutate(mean_delay_month = mean(dep_delay, na.rm = TRUE)) |>
relocate(mean_delay_month) |>
slice(1)
flights |>
group_by(month) |>
filter(dep_delay == max(dep_delay, na.rm = TRUE))
flights |>
group_by(month) |>
arrange(desc(dep_delay)) |>
relocate(dep_delay)
flights |>
group_by(month) |>
arrange(desc(dep_delay), .by_group = TRUE) |>
relocate(dep_delay)
flights |>
summarise(
retard_dep = mean(dep_delay, na.rm = TRUE),
retard_arr = mean(arr_delay, na.rm = TRUE)
)
flights |>
group_by(month) |>
summarise(
max_delay = max(dep_delay, na.rm = TRUE),
min_delay = min(dep_delay, na.rm = TRUE),
mean_delay = mean(dep_delay, na.rm = TRUE)
)
flights |>
group_by(dest) |>
summarise(n = n())
flights |>
group_by(month, dest) |>
summarise(n = n())
flights |>
count(dest)
flights |>
group_by(month, dest) |>
summarise(nb = n()) |>
arrange(desc(nb))
flights |>
count(origin, dest) |>
arrange(desc(n))
flights |>
group_by(month, origin, dest) |>
summarise(nb = n()) |>
group_by(month) |>
filter(nb == max(nb))
flights |>
group_by(month, origin, dest) |>
summarise(nb = n())
flights |>
group_by(month, dest) |>
summarise(nb = n()) |>
mutate(pourcentage = nb / sum(nb) * 100)
flights |>
group_by(month, dest) |>
summarise(nb = n()) |>
ungroup() |>
mutate(pourcentage = nb / sum(nb) * 100)
flights |>
group_by(month, dest) |>
group_rows()
summarise(nb = n()) |>
ungroup() |>
mutate(pourcentage = nb / sum(nb) * 100)
flights |>
group_by(month, dest) |>
group_data()
summarise(nb = n()) |>
ungroup() |>
mutate(pourcentage = nb / sum(nb) * 100)
flights |>
group_by(month, dest) |>
group_data() |>
summarise(nb = n()) |>
ungroup() |>
mutate(pourcentage = nb / sum(nb) * 100)
flights |>
group_by(month, dest) |>
group_data() |>
summarise(nb = n()) |>
group_data() |>
ungroup() |>
mutate(pourcentage = nb / sum(nb) * 100)
flights |>
group_by(month, dest) |>
group_data(flights) |>
summarise(nb = n()) |>
group_data(flights) |>
ungroup() |>
mutate(pourcentage = nb / sum(nb) * 100)
flights |>
group_by(month, dest) |>
summarise(nb = n()) |>
ungroup() |>
mutate(pourcentage = nb / sum(nb) * 100)
flights |>
count(month, dest)
v <- c(1.2, 8.7, 5.6, 11.4)
m <- mean(v)
r <- round(m, digits = 1)
f <- format(r, decimal.mark = ",")
p <- paste0("La moyenne est de ", f, ".")
message(p)
message(paste0("La moyenne est de ", format(round(mean(v),        digits = 1), decimal.mark = ","), "."))
message(
paste0(
"La moyenne est de ",
format(
round(
mean(v),
digits = 1),
decimal.mark = ","
),
"."
)
v |>
mean() |>
round(digits = 1) |>
paste0("La moyenne est de ", m = _, ".")
v |>
mean() |>
round(digits = 1) |>
format(decimal.mark = ",") |>
paste0("La moyenne est de ", m = _, ".")
v <- c(1.2, 8.7, 5.6, 11.4)
m <- mean(v)
r <- round(m, digits = 1)
f <- format(r, decimal.mark = ",")
p <- paste0("La moyenne est de ", f, ".")
message(p)
message(paste0("La moyenne est de ", format(round(mean(v),        digits = 1), decimal.mark = ","), "."))
message(
paste0(
"La moyenne est de ",
format(
round(
mean(v),
digits = 1),
decimal.mark = ","
),
"."
)
v |>
mean() |>
round(digits = 1) |>
format(decimal.mark = ",") |>
paste0("La moyenne est de ", m = _, ".")
library(tidyverse, warn.conflicts = FALSE)
iris |>
pluck("Petal.Width") |>
mean()
mean(iris$Petal.Width)
v <- c("a", "b", "c", "d")
v |> pluck(2)
iris |>
purrr::pluck("Sepal.Width", 3)
iris |>
purrr::pluck("Sepal.Width") |>
purrr::pluck(3)
iris[["Sepal.Width"]][3]
iris |> pluck("inconnu")
iris |> chuck("inconnu")
v <- c(1.2, 8.7, 5.6, 11.4)
m <- mean(v)
r <- round(m, digits = 1)
f <- format(r, decimal.mark = ",")
p <- paste0("La moyenne est de ", f, ".")
message(p)
message(paste0("La moyenne est de ", format(round(mean(v),        digits = 1), decimal.mark = ","), "."))
message(
paste0(
"La moyenne est de ",
format(
round(
mean(v),
digits = 1),
decimal.mark = ","
),
"."
)
v |>
mean() |>
round(digits = 1) |>
format(decimal.mark = ",") |>
paste0("La moyenne est de ", m = _, ".")
library(tidyverse, quietly = TRUE)
iris |>
pluck("Petal.Width") |>
mean()
mean(iris$Petal.Width)
v <- c("a", "b", "c", "d")
v |> pluck(2)
iris |>
purrr::pluck("Sepal.Width", 3)
iris |>
purrr::pluck("Sepal.Width") |>
purrr::pluck(3)
iris[["Sepal.Width"]][3]
v <- c(1.2, 8.7, 5.6, 11.4)
m <- mean(v)
r <- round(m, digits = 1)
f <- format(r, decimal.mark = ",")
p <- paste0("La moyenne est de ", f, ".")
message(p)
message(paste0("La moyenne est de ", format(round(mean(v),        digits = 1), decimal.mark = ","), "."))
message(
paste0(
"La moyenne est de ",
format(
round(
mean(v),
digits = 1),
decimal.mark = ","
),
"."
)
v |>
mean() |>
round(digits = 1) |>
format(decimal.mark = ",") |>
paste0("La moyenne est de ", m = _, ".")
library(tidyverse, quietly = TRUE)
iris |>
pluck("Petal.Width") |>
mean()
mean(iris$Petal.Width)
v <- c("a", "b", "c", "d")
v |> pluck(2)
iris |>
purrr::pluck("Sepal.Width", 3)
iris |>
purrr::pluck("Sepal.Width") |>
purrr::pluck(3)
iris[["Sepal.Width"]][3]
v <- c(1.2, 8.7, 5.6, 11.4)
m <- mean(v)
r <- round(m, digits = 1)
f <- format(r, decimal.mark = ",")
p <- paste0("La moyenne est de ", f, ".")
message(p)
message(paste0("La moyenne est de ", format(round(mean(v),        digits = 1), decimal.mark = ","), "."))
message(
paste0(
"La moyenne est de ",
format(
round(
mean(v),
digits = 1),
decimal.mark = ","
),
"."
)
v |>
mean() |>
round(digits = 1) |>
format(decimal.mark = ",") |>
paste0("La moyenne est de ", m = _, ".")
library(tidyverse, quietly = TRUE)
iris |>
pluck("Petal.Width") |>
mean()
mean(iris$Petal.Width)
v <- c("a", "b", "c", "d")
v |> pluck(2)
iris |>
purrr::pluck("Sepal.Width", 3)
iris |>
purrr::pluck("Sepal.Width") |>
purrr::pluck(3)
iris[["Sepal.Width"]][3]
v <- c(1.2, 8.7, 5.6, 11.4)
m <- mean(v)
r <- round(m, digits = 1)
f <- format(r, decimal.mark = ",")
p <- paste0("La moyenne est de ", f, ".")
message(p)
message(paste0("La moyenne est de ", format(round(mean(v),        digits = 1), decimal.mark = ","), "."))
message(
paste0(
"La moyenne est de ",
format(
round(
mean(v),
digits = 1),
decimal.mark = ","
),
"."
)
v |>
mean() |>
round(digits = 1) |>
format(decimal.mark = ",") |>
paste0("La moyenne est de ", m = _, ".")
library(tidyverse, quietly = TRUE)
iris |>
pluck("Petal.Width") |>
mean()
mean(iris$Petal.Width)
v <- c("a", "b", "c", "d")
v |> pluck(2)
iris |>
purrr::pluck("Sepal.Width", 3)
iris |>
purrr::pluck("Sepal.Width") |>
purrr::pluck(3)
iris[["Sepal.Width"]][3]
v <- c(1.2, 8.7, 5.6, 11.4)
m <- mean(v)
r <- round(m, digits = 1)
f <- format(r, decimal.mark = ",")
p <- paste0("La moyenne est de ", f, ".")
message(p)
message(paste0("La moyenne est de ", format(round(mean(v),        digits = 1), decimal.mark = ","), "."))
message(
paste0(
"La moyenne est de ",
format(
round(
mean(v),
digits = 1),
decimal.mark = ","
),
"."
)
v |>
mean() |>
round(digits = 1) |>
format(decimal.mark = ",") |>
paste0("La moyenne est de ", m = _, ".")
library(tidyverse, quietly = TRUE)
iris |>
pluck("Petal.Width") |>
mean()
mean(iris$Petal.Width)
v <- c("a", "b", "c", "d")
v |> pluck(2)
iris |>
purrr::pluck("Sepal.Width", 3)
iris |>
purrr::pluck("Sepal.Width") |>
purrr::pluck(3)
iris[["Sepal.Width"]][3]
v <- c(1.2, 8.7, 5.6, 11.4)
m <- mean(v)
r <- round(m, digits = 1)
f <- format(r, decimal.mark = ",")
p <- paste0("La moyenne est de ", f, ".")
message(p)
message(paste0("La moyenne est de ", format(round(mean(v),        digits = 1), decimal.mark = ","), "."))
message(
paste0(
"La moyenne est de ",
format(
round(
mean(v),
digits = 1),
decimal.mark = ","
),
"."
)
v |>
mean() |>
round(digits = 1) |>
format(decimal.mark = ",") |>
paste0("La moyenne est de ", m = _, ".")
library(tidyverse, quietly = TRUE)
iris |>
pluck("Petal.Width") |>
mean()
mean(iris$Petal.Width)
v <- c("a", "b", "c", "d")
v |> pluck(2)
iris |>
purrr::pluck("Sepal.Width", 3)
iris |>
purrr::pluck("Sepal.Width") |>
purrr::pluck(3)
iris[["Sepal.Width"]][3]
#| error: false
iris |> pluck("inconnu")
iris |> chuck("inconnu")
v <- c(1.2, 8.7, 5.6, 11.4)
m <- mean(v)
r <- round(m, digits = 1)
f <- format(r, decimal.mark = ",")
p <- paste0("La moyenne est de ", f, ".")
message(p)
message(paste0("La moyenne est de ", format(round(mean(v), digits = 1), decimal.mark = ","), "."))
message(
paste0(
"La moyenne est de ",
format(
round(
mean(v),
digits = 1),
decimal.mark = ","
),
"."
)
v |>
mean() |>
round(digits = 1) |>
format(decimal.mark = ",") |>
paste0("La moyenne est de ", m = _, ".")
library(tidyverse, quietly = TRUE)
iris |>
pluck("Petal.Width") |>
mean()
mean(iris$Petal.Width)
v <- c("a", "b", "c", "d")
v |> pluck(2)
iris |>
purrr::pluck("Sepal.Width", 3)
iris |>
purrr::pluck("Sepal.Width") |>
purrr::pluck(3)
iris[["Sepal.Width"]][3]
#| error: true
iris |> pluck("inconnu")
iris |> chuck("inconnu")
library(tidyverse)
data("hdv2003", package = "questionr")
install.packages("questionr")
library(tidyverse)
data("hdv2003", package = "questionr")
